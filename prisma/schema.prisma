// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String       @unique
  phone      String
  password   String
  avatar     String?
  status     String       @default("1")
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  profile    Profile?     @relation(fields: [profileId], references: [id])
  UserToken  UserTokens[]
  profileId  String?      @db.ObjectId
  address    Json?
  favorites  Json?
  Comments   Comments[]
  cart       Cart?
}

model Cart {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  user       User      @relation(fields: [userId], references: [id])
  userId     String    @unique @db.ObjectId
  products   Product[] @relation(fields: [productIds], references: [id])
  productIds String[]  @db.ObjectId
}

model Resources {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  key        String
  value      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt


  Profile    Profile[] @relation(fields: [profileIds], references: [id])
  profileIds String[]  @db.ObjectId
}

model Profile {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  User       User[]

  resources   Resources[] @relation(fields: [resourceIds], references: [id])
  resourceIds String[]    @db.ObjectId
}

model UserTokens {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  refresh_token String
  user          User?    @relation(fields: [user_id], references: [id])
  expires_date  DateTime
  created_at    DateTime @default(now())
  user_id       String?  @db.ObjectId
}

model Product {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  price         String
  description   String
  warranty      String
  color         String
  reference     String
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  comments      Comments[]
  note          String?
  product_image Product_image[]
  Cart          Cart[]          @relation(fields: [cartId], references: [id])
  cartId        String[]        @db.ObjectId
}

model Product_image {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  product    Product? @relation(references: [id], fields: [productId])
  productId  String?  @db.ObjectId
  image_name String
}

model Comments {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  user       User?    @relation(fields: [userId], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Product    Product? @relation(fields: [productId], references: [id])
  productId  String?  @db.ObjectId
  comment    String
}
